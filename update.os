Перем Пользователь;
Перем ПутьКФайлуReadme;
Перем КоличествоСтатей;

Процедура ОсновнаяОбработка()

	МассивАргументов = АргументыКоманднойСтроки;
	Пользователь     = МассивАргументов[0];
	ПутьКФайлуReadme = МассивАргументов[1];
	КоличествоСтатей = МассивАргументов[2];

	Сервер = "https://infostart.ru";
	Адрес  = "/profile/" + Пользователь + "/";

	НовыйЗапрос = Новый HTTPЗапрос(Адрес);
	Соединение  = Новый HTTPСоединение(Сервер, 443, , , , 300);
	Ответ       = Соединение.ВызватьHTTPМетод("GET", НовыйЗапрос);

	HTML = Ответ.ПолучитьТелоКакСтроку();
	HTML = Прав(HTML, СтрДлина(HTML) - СтрНайти(HTML, "view-profile"));
	HTML = Лев(HTML , СтрНайти(HTML, "<hr class=""margin-bottom-0"">"));

	МассивДанных      = Новый Массив;
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.УстановитьТекст(HTML);

	СоответствиеПризнаков = Новый Соответствие;
	СоответствиеПризнаков.Вставить("<a class=""font-md"" href=""/1c/", 0);
	СоответствиеПризнаков.Вставить("<a class=""font-md"" href=""/video/", 0);
	СоответствиеПризнаков.Вставить("obj-rate-count-p", 0);
	СоответствиеПризнаков.Вставить("<p style=""overflow: hidden;text-overflow: ellipsis;"" class="" public-preview-text-wrap"">", 1);
	СоответствиеПризнаков.Вставить("/upload/iblock/", 0);
	СоответствиеПризнаков.Вставить("fa fa-calendar", 0);
	СоответствиеПризнаков.Вставить("fa fa-eye", 0);
	СоответствиеПризнаков.Вставить("fa-comments", 0);

	Для Индекс = 1 По ТекстовыйДокумент.КоличествоСтрок() Цикл
		
		ТекущаяСтрока = ТекстовыйДокумент.ПолучитьСтроку(Индекс);

		Для Каждого Признак Из СоответствиеПризнаков Цикл
			Если СтрНайти(ТекущаяСтрока, Признак.Ключ) > 0 Тогда

				СтрокаДанных = ТекстовыйДокумент.ПолучитьСтроку(Индекс + Признак.Значение);
				Путь         = ДостатьПути(СтрокаДанных);
				УдалитьТеги(СтрокаДанных);

				Если ЗначениеЗаполнено(СтрокаДанных) И СтрНайти(СтрокаДанных, "&nbsp;") = 0 Тогда
					МассивДанных.Добавить(СтрокаДанных);
					Сообщить(СтрокаДанных);
				КонецЕсли;

				Если ЗначениеЗаполнено(Путь) Тогда
					МассивДанных.Добавить(Путь);
					Сообщить(Путь);
				КонецЕсли;
				

			КонецЕсли;
		КонецЦикла;

	КонецЦикла;

	СформироватьИтоговыйТекст(МассивДанных);

КонецПроцедуры

Функция ДостатьПути(Данные)

	Путь = "";

	Если СтрНайти(Данные, "data-src") > 0 Тогда
		Путь = СтрЗаменить(Данные, "data-src='", "");
		Путь = СтрЗаменить(Путь, "'></a>", "");
		Данные = "";
	ИначеЕсли СтрНайти(Данные, "href=") > 0 Тогда

		Путь = Прав(Данные, СтрДлина(Данные) - СтрНайти(Данные, "/"));
		Путь = Лев(Путь, СтрНайти(Путь, "/"" "));
		Путь = "/" + Путь;
	
	Иначе 
		Возврат Путь;
	КонецЕсли;

	Путь = "https://infostart.ru" + СокрЛП(Путь);
	Возврат Путь;

КонецФункции

Процедура УдалитьТеги(Данные)

	СтрокаУдаления = "";
	Удалять        = СтрНайти(Данные, ">") < СтрНайти(Данные, "<");
	МассивУдаления = Новый Массив;

	Для Н = 1 По СтрДлина(Данные) Цикл

		ТекущийСимвол = Сред(Данные, Н, 1);

		Если ТекущийСимвол = "<" Или ТекущийСимвол = ">" Тогда
			Удалять = Не Удалять;

			Если Не Удалять И ЗначениеЗаполнено(СтрокаУдаления) Тогда
				СтрокаУдаления = СтрокаУдаления + ТекущийСимвол;
				МассивУдаления.Добавить(СтрокаУдаления);
				СтрокаУдаления = "";
			КонецЕсли;

		КонецЕсли;

		Если Удалять Тогда
			СтрокаУдаления = СтрокаУдаления + ТекущийСимвол;
		КонецЕсли;

	КонецЦикла;

	Если ЗначениеЗаполнено(СтрокаУдаления) Тогда
		МассивУдаления.Добавить(СтрокаУдаления);
	КонецЕсли;
	
	Для Каждого ЭлементУдаления Из МассивУдаления Цикл
		Данные = СтрЗаменить(Данные, ЭлементУдаления, "");
	КонецЦикла;

	Данные = СтрЗаменить(Данные, "</a>", "");
	Данные = СтрЗаменить(Данные, "</span>", "");
	Данные = СокрЛП(Данные);
	
КонецПроцедуры

Процедура СформироватьИтоговыйТекст(Знач МассивДанных)
	
	Шаблон = 
	"
	|> <img src=""%1"" width=""96"" align=""left""> 
	|> <h4 style=""color: white;""><a href=""%3"">%2</a></h4>
	|> <small>%5</small>  
	|> <br clear=""left"">
	|>
	|> | :star: %4 |  :calendar: %6 |  :speech_balloon: %7 |  :eyes: %8 |
	|>  |-|-|-|-|  ";

	Всего         = МассивДанных.Количество() / 8;
	Всего         = ?(Всего < Число(КоличествоСтатей), Всего, КоличествоСтатей);
	ВыходнойТекст = "";

	Для Н = 0 По Всего - 1 Цикл

		Попытка
			ВыходнойТекст = ВыходнойТекст + СтрШаблон(Шаблон
				, МассивДанных[0 + Н * 8]
				, МассивДанных[1 + Н * 8]
				, МассивДанных[2 + Н * 8]
				, МассивДанных[3 + Н * 8]
				, МассивДанных[4 + Н * 8]
				, МассивДанных[5 + Н * 8]
				, МассивДанных[6 + Н * 8]
				, МассивДанных[7 + Н * 8]);

				ВыходнойТекст = ВыходнойТекст + Символы.ПС + Символы.ПС;
				

		Исключение
			Сообщить("Статья номер " + Строка(Н + 1) + " не сформировалась!");
			Продолжить;
		КонецПопытки;

	КонецЦикла;

	ЗаписатьИзменениеВReadme(ВыходнойТекст);

КонецПроцедуры

Процедура ЗаписатьИзменениеВReadme(ВыходнойТекст)

	Readme        = Новый Файл(ПутьКФайлуReadme);
	НомерСтроки   = 0;
	МассивОчистки = Новый Массив;

	Если Не Readme.Существует() Тогда
		Сообщить("Не найден файл Readme!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецЕсли;

	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.Прочитать(ПутьКФайлуReadme);

	Для Индекс = 1 По ТекстовыйДокумент.КоличествоСтрок() Цикл
		
		ТекущаяСтрока = ТекстовыйДокумент.ПолучитьСтроку(Индекс);

		Если СтрНайти(ТекущаяСтрока, "<div id=""infostart_posts""") > 0 Тогда
			НомерСтроки = Индекс;
			Прервать;
		КонецЕсли;

	КонецЦикла;

	Если НомерСтроки = 0 Тогда
		Сообщить("Не найден тэг постов!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецЕсли;

	Для Индекс = НомерСтроки + 1 По ТекстовыйДокумент.КоличествоСтрок() Цикл

		ТекущаяСтрока = ТекстовыйДокумент.ПолучитьСтроку(Индекс);

		Если СтрНайти(ТекущаяСтрока, "</div>") > 0 Или СтрНайти(ТекущаяСтрока, "</ div>") > 0 Тогда
			Прервать;
		КонецЕсли;

		МассивОчистки.Добавить(Индекс);

	КонецЦикла;

	Для Н = 0 По МассивОчистки.ВГраница() Цикл
		ТекстовыйДокумент.УдалитьСтроку(МассивОчистки[МассивОчистки.ВГраница() - Н]);
	КонецЦикла;

	Сообщить(ТекстовыйДокумент.ПолучитьТекст());

	ТекстовыйДокумент.ВставитьСтроку(НомерСтроки + 1, ВыходнойТекст);
	ТекстовыйДокумент.Записать(ПутьКФайлуReadme);

КонецПроцедуры

Попытка
	ОсновнаяОбработка();	
Исключение
	ОО = ОписаниеОшибки();
	Сообщить(ОО, СтатусСообщения.ОченьВажное);
КонецПопытки;
